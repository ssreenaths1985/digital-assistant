#Server 
server.port=4000

#mysql config
spring.jpa.database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto: update
spring.datasource.url: jdbc:mysql://localhost:3306/Bot_Management?useSSL=false
spring.datasource.username: root
spring.datasource.password: password
spring.datasource.driverClassName: com.mysql.jdbc.Driver


#kafka config
spring.kafka.template.default-topic= domain
spring.kafka.bootstrap-servers= localhost:9092
 
 #postgresql config
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=myPassword

#
assistant.stage.api.key = bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJaR2hybVFjWGdsWFdCekNJeEZNeVUwTEdsN0VPR25nYSJ9._g6SOz-eMq2u_eEQPPIx0I3Lni1H9TEJteC3HSbdGCU

# Local Elasticsearch config
elasticsearch.host=es.rain.idc.tarento.com
elasticsearch.port=80
elasticsearch.user=elastic
elasticsearch.pass=Elastic123
elasticsearch.cluster.name=elasticsearch

#bot training data path
assistant.baseDir.path=/home/varshamahuli/TrainingModels/thor-assistant/Dataset1
#assistant.git.clone.path = /home/varshamahuli/TrainingModels/
assistant.git.clone.path = /home/varshamahuli/Pictures/THORDEFAULT/thor-assistant/
assistant.training.bots=/home/varshamahuli/assistants/
assistant.data.nlu.file=/bot/data/nlu.md
assistant.data.story.file=/bot/data/stories.md
assistant.domain.file=/bot/domain.yml
assistant.config.file=/bot/config.yml
assistant.models =/bot/models/
assistant.results =/bot/results/
assistant.reports=/bot/reports/
assistant.baseReports=/home/varsha/Pictures/Dataset2/bot/results
assistant.histogram=/home/varsha/Desktop/Results/histogram.txt
assistant.backup.path=/home/varsha/TrainingModels/thor-assistant/thor_Backup/
assistant.server.ip = 40.113.200.227
assistant.compiler.url = http://localhost:4002


# kubernetes service names
#vega.rasa.nlp.sandbox.service = vega-rasa-nlp-sandbox-service
#vega.rasa.action.sandbox.service = vega-rasa-action-sandbox-service
#vega.rasa.nlp.igot.service = vega-rasa-nlp-igot-service
#vega.rasa.action.igot.service = vega-rasa-action-igot-service
#vega.router.service = vega-router-service
#vega.compiler.service = vega-compiler-service
#vega.shadow.service = vega-shadow-service

assistant.rasa.nlp.sandbox.service = localhost:5005
assistant.rasa.action.sandbox.service = localhost:5055
assistant.rasa.nlp.igot.service = localhost:5005
assistant.rasa.action.igot.service = localhost:5005
assistant.router.service = http://localhost:4005/user
assistant.compiler.service = http://localhost:4002
assistant.rasa.nlp.chiring.service = localhost:5005
assistant.rasa.nlp.website.service = localhost:5005
assistant.rasa.nlp.kronos.service = localhost:5005
assistant.rasa.nlp.leadership.service = localhost:5005
assistant.shadow.service = localhost:5000

# git configurations
git.repo.name = https://git.idc.tarento.com/nxt/thor/thor-assistant.git
git.branch.name = thor_storage
git.username= 
git.token = 

#ip address for production and statging environments
assistant.production.env=localhost
assistant.staging.env=localhost


#docker
path.docker.file=/home/varsha/Desktop/Results/Dockerfile
docker.host.url=tcp://localhost:2375
docker.bot.port=5005
docker.router.url=http://localhost:4002
docker.model.path=/home/ubuntu/models/
docker.bot.start.message="bot has started"
docker.container.path = /ubuntu/var/lib/docker/containers/
docker.router.domains = /home/varsha/thor-assistant/Assistant/be/router/config/domain.js
docker.router.domainsTemp = /home/varsha/thor-assistant/Assistant/be/router/config/domainTemp.js

##security
bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 84600000
jwt.refreshExpirationDateInMs=9000000

